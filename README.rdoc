= theman

The man getting you down?

FasterCSV is great and all but when you get to 100MB files it takes a 
while and you may only be looking for certain records that match some 
criteria, enter Theman.

== Installation

=== Rails3

  gem 'theman'

=== Rails2.x

  config.gem 'theman'

Or

  gem install 'theman'

== Basic Usage

  my_agent = ::Theman::Agency.new 'pretty.csv'
  my_agent.instance.count

Say if you wanted to analyse some data the man has given you, you could make the 
table persist by doing the following in an IRB session:

  require 'active_record'
  require 'theman'

  ActiveRecord::Base.establish_connection :database => $USER, :host => "localhost", :adapter => "postgresql"

  my_agent = ::Theman::Agency.new('pretty.csv', ActiveRecord::Base, :temporary => false) {|a| a.date :date_col }

After you have figured out what the hell is going on with the data, you can get the man of 
your back (for now).

== Advanced Usage
    
  my_agent = ::Theman::Agency.new 'ugly.csv', ActiveRecord::Base, :primary_key => true do |s|
    s.nulls /"N"/, /"UNKNOWN"/, /""/
    s.seds "-n -e :a -e '1,15!{P;N;D;};N;ba'"
    s.delimiter "|"
    s.table do |t|
      t.string :name, :limit => 50
      t.date :date
      t.integer :ext_id
      t.float :amount
      t.boolean :exited
    end
  end

  my_agent.instance.where(:exited => true).count

WARNING: if you have user input in your sed commands find a new job, so as 
not to bring my profesion into disrepute. When pass in extra sed commands 
as an array each on will be given an extra subprocess, this makes it faster 
if you have more than one core.

In the above example we omitted the last 15 rows, made some things null, 
added a primary key and changed some column data types to somthing else.

If you do not provide a table block your columns will be VARCHAR(255); you 
can cherry pick cols to change data types.

The temp table has no id column by default but you can add one using the options 
hash or calling add_primary_key and this will add the agents_pkey column.

If you want to call this procedural just don't pass in the path to the file 
and Theman will not create a table in which case you will need to call everything 
explicitly:

  smith = ::Theman::Agency.new
  smith.stream 'real_ugly.csv'
  smith.create_table
  smith.pipe_it

== Dates

Ah dates, everybodys joy. Use datestyle to tell Theman to tell postgresql:

  my_agent = ::Theman::Agency.new 'uber_foie_gras.csv' do |schmit|
    schmit.datestyle 'European'
    schmit.table do |t|
      t.date :start_date
      t.date :end_date
    end
  end

Refer to postgrsql docs for more info but here is some copy and paste action:

ISO

* Use ISO 8601-style dates and times (YYYY-MM-DD HH:MM:SS). This is the default. 

SQL

* Use Oracle/Ingres-style dates and times. Note that this style has nothing to do with SQL 
(which mandates ISO 8601 style), the naming of this option is a historical accident. 

PostgreSQL

* Use traditional PostgreSQL format. 

German

* dd.mm.yyyy

European

* dd/mm/yyyy

US

* mm/dd/yyyy

== Troubles

Table empty? the man (the real life one) has given you crappy data and PostgresSQL 
has silently dissed it.

== Copyright

(The MIT License)

Copyright (c) 2010 {mynameisrufus (Rufus Post)}[http://github.com/mynameisrufus]

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
